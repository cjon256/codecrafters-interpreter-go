// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package tokenizer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EOF-0]
	_ = x[LEFT_PAREN-1]
	_ = x[RIGHT_PAREN-2]
	_ = x[LEFT_BRACE-3]
	_ = x[RIGHT_BRACE-4]
	_ = x[SEMICOLON-5]
	_ = x[COMMA-6]
	_ = x[PLUS-7]
	_ = x[MINUS-8]
	_ = x[EQUAL-9]
	_ = x[STAR-10]
	_ = x[BANG_EQUAL-11]
	_ = x[EQUAL_EQUAL-12]
	_ = x[LESS_EQUAL-13]
	_ = x[GREATER_EQUAL-14]
	_ = x[LESS-15]
	_ = x[GREATER-16]
	_ = x[SLASH-17]
	_ = x[DOT-18]
	_ = x[BANG-19]
	_ = x[STRING-20]
	_ = x[NUMBER-21]
	_ = x[IDENTIFIER-22]
	_ = x[AND-23]
	_ = x[CLASS-24]
	_ = x[ELSE-25]
	_ = x[FALSE-26]
	_ = x[FOR-27]
	_ = x[FUN-28]
	_ = x[IF-29]
	_ = x[NIL-30]
	_ = x[OR-31]
	_ = x[PRINT-32]
	_ = x[RETURN-33]
	_ = x[SUPER-34]
	_ = x[THIS-35]
	_ = x[TRUE-36]
	_ = x[VAR-37]
	_ = x[WHILE-38]
}

const _TokenType_name = "EOFLEFT_PARENRIGHT_PARENLEFT_BRACERIGHT_BRACESEMICOLONCOMMAPLUSMINUSEQUALSTARBANG_EQUALEQUAL_EQUALLESS_EQUALGREATER_EQUALLESSGREATERSLASHDOTBANGSTRINGNUMBERIDENTIFIERANDCLASSELSEFALSEFORFUNIFNILORPRINTRETURNSUPERTHISTRUEVARWHILE"

var _TokenType_index = [...]uint8{0, 3, 13, 24, 34, 45, 54, 59, 63, 68, 73, 77, 87, 98, 108, 121, 125, 132, 137, 140, 144, 150, 156, 166, 169, 174, 178, 183, 186, 189, 191, 194, 196, 201, 207, 212, 216, 220, 223, 228}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
